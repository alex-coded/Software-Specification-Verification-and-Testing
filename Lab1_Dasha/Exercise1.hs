import Data.List
import System.Random
import Test.QuickCheck
import Lecture2.hs

--finds the factorial of an integer input
factorial :: Integer -> Integer
factorial 0 = 1
factorial n = n * factorial (n-1)

--Props to test factorial function
prop1 :: Integer -> Bool
prop1 n = fact n == n * fact (n - 1)

prop2 :: Integer -> Bool
prop2 = even

--random number generator using QuickCheck Gen construct


--To generate a random value of type a, we need a generator for values of that type: Gen a. The default generator for values of any type is arbitrary, which is a method of QuickCheck's Arbitrary type class: 
--class Arbitrary a where
--  arbitrary :: Gen a

--generator
--generate :: Gen a -> IO a

main :: IO ()
main = do
  arbitrary_no <- generate arbitrary :: IO Integer
  print $ "Arbitrary number generated by Gen: " ++ show arbitrary_no
  print $ factorial arbitrary_no

--arbitrary function, which should return a Gen Cell (monad)


